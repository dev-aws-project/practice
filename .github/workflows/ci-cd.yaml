name: CI/CD Pipeline

on:
  pull_request:
    types:
      - opened

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  initialize:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get cluster credentials
        id: get-cluster-credentials
        run: |
          aws eks update-kubeconfig --region ${{ env.AWS_REGION }} --name ${{ secrets.CLUSTER_NAME }}
          kubectl config use-context ${{ secrets.CLUSTER_NAME }}
          cluster_endpoint=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster.server}')
          ca_certificate=$(kubectl config view --minify -o jsonpath='{.clusters[0].cluster."certificate-authority-data"}')
          echo "::set-output name=cluster_endpoint::$cluster_endpoint"
          echo "::set-output name=ca_certificate::$ca_certificate"

      - name: Create kubeconfig file
        run: bash create-kubeconfig.sh

  build:
    if: github.event_name == 'pull_request'
    needs: [initialize]
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Docker
        run: |
          sudo apt-get upgrade
          sudo apt-get update
          sudo apt-get install -y docker.io

      - name: Build and tag Docker image
        run: |
          docker-compose -f docker-compose.yml build my-app
          docker tag my-app:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/my-app:${{ github.sha }}

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ env.AWS_REGION }} | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Push Docker image to ECR
        run: |
          docker push ${{ secrets.ECR_REGISTRY }}/my-app:${{ github.sha }}

  deploy:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    needs: [build]
    runs-on: ubuntu-latest

    steps:
      - name: Manual deployment trigger
        id: manual-deploy
        uses: peter-evans/manual-deploy@v1.2.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.head_ref }}
          deployment_file: deployment.yaml
          kubeconfig_file: kubeconfig.yaml
